var code = "import javax.imageio.ImageIO;\nimport javax.swing.BoxLayout;\nimport javax.swing.ImageIcon;\nimport javax.swing.JButton;\nimport javax.swing.JCheckBox;\nimport javax.swing.JFileChooser;\nimport javax.swing.JLabel;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\n\npublic class Screen extends JPanel implements MouseListener, MouseMotionListener, MouseWheelListener, KeyListener, ItemListener, ActionListener\n{\n    private static int mousex = 500;\n    private static int mousey = 300;\n    private BufferedImage borderTop, borderDown, buttonUp, buttonDown, addLayer, gear, greenCheck;\n    private VolatileImage buffered;\n    private static boolean mouseDown = false; \n    private String chosen = \"none\";\n    private boolean clickingOnScroll = false;\n    private double barH=111;\n    private double yScroll=0;\n    private double ratio;\n    private boolean clickingOnXScroll = false;\n    private double xBarH=12;\n    private static double xMove=0;\n    private double xRatio;\n    private boolean clickingOnYScroll = false;\n    private double yBarH=102;\n    private static double yMove=0;\n    private double yRatio;\n    private int canvasWidth = 819;\n    private int canvasHeight = 510;\n    private int mouseWheelYChange;\n    private String selectedButton = \"move\";\n    private ArrayList<layer> layers = new ArrayList<layer>();\n    private static int layerSelected = -1;\n    private int picNum = 0;\n    private int polyNum = 0;\n    private int primNum = 0;\n    private int wordNum = 0;\n    private static int mouseOver = -1;\n    private ToolTip tt = new ToolTip();\n    private boolean autoSave = true;\n    private boolean openFromSave = true;\n    private boolean showToolTip = true;\n    private boolean alignXY = true;\n    private JCheckBox autoSaveCheckBox = new JCheckBox(\"autosave workspace\");\n    private JCheckBox showToolTipCheckBox = new JCheckBox(\"show mouse tool-tips\");\n    private JCheckBox openFromSaveCheckBox = new JCheckBox(\"open saved workspace\");\n    private JCheckBox alignXYCheckBox = new JCheckBox(\"align exported image to (0,0)\");\n    private Color selectionColor = Color.cyan;\n    private int pointSize = 4;\n    private int estimatedFPSWaitTime = 15;\n    private int gearDegrees = 0;\n    private double gearVelocity = 0;\n    private ColorChooser cc;\n    private static boolean editingPolygon = false;\n    public Screen()\n    {\n        try\n        {\n            buttonDown = ImageIO.read(getClass().getResource(\"/res/buttonPress.png\")); \n            buttonUp = ImageIO.read(getClass().getResource(\"/res/buttonUp.png\")); \n            borderTop = ImageIO.read(getClass().getResource(\"/res/borderTop.png\"));\n            borderDown = ImageIO.read(getClass().getResource(\"/res/borderDown.png\"));\n            addLayer = ImageIO.read(getClass().getResource(\"/res/AddLayer.png\"));\n            gear = ImageIO.read(getClass().getResource(\"/res/gear.png\"));\n            greenCheck = ImageIO.read(getClass().getResource(\"/res/greenCheck.png\"));\n        } catch (IOException e) {}\n        setFocusable(true);\n        addMouseListener(this);\n        addKeyListener(this);\n        addMouseMotionListener(this);\n        addMouseWheelListener(this);\n        autoSaveCheckBox.addItemListener(this);\n        showToolTipCheckBox.addItemListener(this);\n        openFromSaveCheckBox.addItemListener(this);\n        alignXYCheckBox.addItemListener(this);\n        boolean somethingWithSavingWentWrong = openSaveSettings();\n        if (!somethingWithSavingWentWrong)\n            JOptionPane.showMessageDialog(null, \"It seems like your save file was corrupted or missing! Sorry!\", \"error\", JOptionPane.ERROR_MESSAGE);\n        try {\n            Thread.sleep(600);\n        } catch(InterruptedException ex) {}\n        boolean somethingWentWrong = false;\n        if (openFromSave)\n            somethingWentWrong = openSave();\n        else\n            somethingWentWrong = true;\n        if (!somethingWentWrong && somethingWithSavingWentWrong)\n            JOptionPane.showMessageDialog(null, \"It seems like your workspace file was corrupted or missing! Sorry!\", \"error\", JOptionPane.ERROR_MESSAGE);\n        else if (!somethingWentWrong)\n            JOptionPane.showMessageDialog(null, \"It seems like your workspace file was also corrupted or missing.\", \"error\", JOptionPane.ERROR_MESSAGE);\n        if (layerSelected != -1 && !(layerSelected >= layers.size()))\n            layers.get(layerSelected).select();\n        for (int i = 0;i < layers.size(); i++)\n            layers.get(i).changeColor(selectionColor);\n    }\n    public void paintComponent(Graphics g) \n    {\n        super.paintComponent(g);\n        buffered = (VolatileImage)(createVolatileImage( canvasWidth, canvasHeight+90 ) );\n        Graphics f = buffered.createGraphics();\n        super.paintComponent(f);\n        for (int i = 0; i<layers.size(); i++)\n        {\n            layers.get(i).drawMe(f, selectedButton);\n        }\n        g.drawImage(buffered, (int)xMove, (int)yMove, null);\n        g.drawImage(borderDown, 819,90,null);                   // draw lower border\n        if (layers.size()>5)\n        {\n            ratio = ((double)(layerListHeight()-441)/(410));        // this part is for the scrollbar thingy\n            barH = (yScroll/ratio)+111;\n            if (!mouseDown)\n            {\n                clickingOnScroll = false;\n            }\n            else if (mouseDown&&mousex>976&&mousex<989&&mousey>barH-10&&mousey<barH+20&&mousey<520&&mousey>111||clickingOnScroll&&mousey<520&&mousey>111)\n            {\n                clickingOnScroll = true;\n                barH = mousey;\n            }\n            else if (clickingOnScroll)\n            {\n                if (mousey < 111)\n                    barH = 111;\n                else if (mousey > 520)\n                    barH = 520;\n            }\n            yScroll = ((barH-111)*ratio);\n            g.setColor(Color.gray);\n            g.fillRect(978, (int)barH-10, 11, 30);\n            if (mouseWheelYChange != 0)\n            {\n                if (barH != 520 && mouseWheelYChange>0 && barH < 520-mouseWheelYChange*8)\n                {\n                    yScroll+=mouseWheelYChange*8;\n                    mouseWheelYChange = 0;\n                }\n                else if (barH != 111 && mouseWheelYChange<0 && barH > 111+mouseWheelYChange*8)\n                {   \n                    yScroll+=mouseWheelYChange*8;\n                    mouseWheelYChange = 0;\n                }\n                else if (mouseWheelYChange>0)\n                {\n                    ratio = ((double)(layerListHeight()-441)/(410));    \n                    yScroll = ((520-111)*ratio);\n                    mouseWheelYChange = 0;\n                }\n                else if (mouseWheelYChange<0)\n                {\n                    ratio = ((double)(layerListHeight()-441)/(410));    \n                    yScroll = ((111-111)*ratio);\n                    mouseWheelYChange = 0;\n                }\n            }\n            if (barH > 520 )\n            {\n                yScroll = ((520-111)*ratio);\n                mouseWheelYChange = 0;\n            }\n            else if (barH < 111 )\n            {\n                yScroll = 0;\n                mouseWheelYChange = 0;\n            }\n        }\n        else\n        {\n            yScroll = 0;\n            barH = (yScroll*ratio)+101;\n            g.setColor(Color.gray);\n            g.fillRect(977, 100, 13, 442);\n        }\n        for (int i = 0; i<layers.size(); i++)\n        {\n            layers.get(i).drawMe2(g, 65-(int)yScroll, layers.size()-i-1);\n        }\n        g.drawImage(borderTop, 0,0,null);\n        g.drawImage(rotateImage(gear, gearDegrees, this), 929, 23, null);\n        if (selectedButton.equals(\"resize\"))                    //draw the buttons either up or down. \n            g.drawImage(buttonDown, 11, 12, null);\n        else\n            g.drawImage(buttonUp, 11, 12, null);\n        if (selectedButton.equals(\"point\"))\n            g.drawImage(buttonDown, 138, 12, null);\n        else\n            g.drawImage(buttonUp, 138, 12, null);\n        if (selectedButton.equals(\"export\"))\n            g.drawImage(buttonDown, 265, 12, null);\n        else\n            g.drawImage(buttonUp, 265, 12, null);\n        if (selectedButton.equals(\"angle\"))\n            g.drawImage(buttonDown, 392, 12, null);         \n        else\n            g.drawImage(buttonUp, 392, 12, null);           \n        if (selectedButton.equals(\"move\") /*|| (selectedButton.equals(\"none\")&&layers.size()>0)*/)\n        {\n//          selectedButton = \"move\";\n            g.drawImage(buttonDown, 519, 12, null);\n        }\n        else\n            g.drawImage(buttonUp, 519, 12, null);\n        if (selectedButton.equals(\"options\"))\n            g.drawImage(buttonDown, 646, 12, null);         \n        else\n            g.drawImage(buttonUp, 646, 12, null);\n        if (editingPolygon)\n        {\n            g.drawImage(greenCheck, 646+127+18, 12+10, null);               \n            if (selectedButton.equals(\"greenCheck\"))\n                g.drawImage(buttonDown, 646+127, 12, 80, 67, null); \n            else\n                g.drawImage(buttonUp, 646+127, 12, 80, 67, null);\n        }\n        g.drawImage(addLayer, 819, 524, null);\n        g.setColor(new Color(100,100,100,50));\n        if (mouseOver == 0)\n            g.fillRect(823, 551, 997-823, 598-551);\n        else if (mouseOver == 1 && !selectedButton.equals(\"resize\"))\n            g.fillRoundRect(11, 12, 120, 65, 14, 14);\n        else if (mouseOver == 2 && !selectedButton.equals(\"point\"))\n            g.fillRoundRect(138, 12, 120, 65, 14, 14);\n        else if (mouseOver == 3 && !selectedButton.equals(\"export\"))\n            g.fillRoundRect(265, 12, 120, 65, 14, 14);\n        else if (mouseOver == 4 && !selectedButton.equals(\"angle\"))\n            g.fillRoundRect(392, 12, 120, 65, 14, 14);\n        else if (mouseOver == 5 && !selectedButton.equals(\"move\"))\n            g.fillRoundRect(519, 12, 120, 65, 14, 14);\n        else if (mouseOver == 6 && !selectedButton.equals(\"options\"))\n            g.fillRoundRect(646, 12, 120, 65, 14, 14);\n        else if (editingPolygon && mouseOver == 8 && !selectedButton.equals(\"greenCheck\"))\n            g.fillRoundRect(646+127, 12, 80, 65, 14, 14);\n        if (canvasHeight > 510)\n        {\n            g.setColor(Color.LIGHT_GRAY);\n            g.fillRect(804, 90, 15, 519-24);            \n            yRatio = ((double)(canvasHeight-600+90)/(563-102));     // this part is for the scrollbar thingy\n            yBarH = (-yMove/yRatio)+102;\n            if (!mouseDown)\n            {\n                clickingOnYScroll = false;\n            }\n            else if (mouseDown&&mousex>804&&mousex<806+13&&mousey>yBarH-10&&mousey<yBarH+20&&mousey<563&&mousey>102||clickingOnYScroll&&mousey<563&&mousey>102)\n            {\n                clickingOnYScroll = true;\n                yBarH = mousey;\n            }\n            else if (clickingOnYScroll)\n            {\n                if (mousey < 102)\n                    yBarH = 102;\n                else if (mousey > 563)\n                    yBarH = 563;\n            }\n            yMove = -((yBarH-102)*yRatio);\n            g.setColor(Color.gray);\n            g.fillRect(806, (int)yBarH-10, 11, 30);\n            if (yBarH > 563 )\n            {\n                yMove = -((563-102)*yRatio);\n            }\n            else if (yBarH < 102 )\n            {\n                yMove = 0;\n            }\n        }\n        if (canvasWidth > 819)\n        {\n            g.setColor(Color.LIGHT_GRAY);\n            g.fillRect(0, 585, 804, 15);\n            xRatio = ((double)(canvasWidth-819)/(782-10));      // this part is for the scrollbar thingy\n            xBarH = (-xMove/xRatio);\n            if (!mouseDown)\n            {\n                clickingOnXScroll = false;\n            }\n            else if (mouseDown&&mousey>585&&mousey<600&&mousex>xBarH-10&&mousex<xBarH+20&&mousex<782&&mousex>12||clickingOnXScroll&&mousex<782&&mousex>12)\n            {\n                clickingOnXScroll = true;\n                xBarH = mousex;\n            }\n            else if (clickingOnXScroll)\n            {\n                if (mousex < 12)\n                    xBarH = 12;\n                else if (mousex > 782)\n                    xBarH = 782;\n            }\n            xMove = -((xBarH)*xRatio);\n            g.setColor(Color.gray);\n            g.fillRect((int)xBarH-10, 600-13, 30, 11);\n        }\n        tt.drawMe(g);\n//      fps = (int)(1000000000.0 / (System.nanoTime() - lastTimeChecked));\n//      lastTimeChecked = System.nanoTime();\n//      totalRefresh++;\n//      averagefps += fps;\n//      g.setColor(Color.gray);\n//      g.setFont(new Font(\"Times new roman\", Font.BOLD, 20));\n//      g.drawString(\"fps: \"+(int)fps, 10, 580);\n//      g.drawString(\"| Average fps:\"+(int)(averagefps/totalRefresh), 80, 580);\n    }\n    public void animate()\n    {\n        while (true)\n        {\n            try {\n                Thread.sleep(estimatedFPSWaitTime);\n            } catch(Exception e) {}\n            repaint();\n            tt.update(mousex, mousey, mouseOver);\n        }\n    }\n\n    /***************************************************\n    code that I have to have because I implemented stuff \n      MousePressed is the main code here but the others \n    are slightly important in other parts of the program\n     ****************************************************/\n    \n    public void mousePressed(MouseEvent e) \n    {\n        mouseDown = true;\n//      System.out.println(mousex+\", \"+mousey);\n        if (mousex > 819 && mousey > 90) // mousePress on layer bar\n        {\n            if (mousex > 829 && mousex < 967 && mousey < 551)\n            {\n                for (int i = 0; i< layers.size(); i++)\n                {\n                    layers.get(i).deselect();\n                }\n                for (int i = 0; i< layers.size(); i++)\n                {\n                    int layerClicked = layers.get(i).layerClicked(mousex, mousey);\n                    if (layerClicked == 1)\n                    {\n                        layerSelected = i;\n//                      selectedButton = \"none\";\n                        break;\n                    }\n                    else if (layerClicked == 0)\n                    {\n                        layers.remove(i);\n                        if (layers.size()>0)\n                            selectedButton = \"move\";\n                        else\n                            selectedButton = \"none\";\n                        break;\n                    }\n                    else if (layerClicked == 2)\n                    {\n                        if (i!=0)\n                        {\n                            layer transfer = layers.get(i);\n                            layers.set(i,layers.get(i-1));\n                            layers.set(i-1,transfer);\n                        }\n                        layerSelected = i;\n                        break;\n                    }\n                    else if (layerClicked == 3)\n                    {\n                        if (!(i+1==layers.size()))\n                        {\n                            layer transfer = layers.get(i);\n                            layers.set(i,layers.get(i+1));\n                            layers.set(i+1,transfer);\n                        }\n                        layerSelected = i;\n                        break;\n                    }\n                }\n            }\n            else if (mousex>822 && mousex < 996 && mousey > 551 && mousey < 596) // mouse pressed on new layer\n            {\n                tt.closeToolTip();\n                Object[] possibilities = {\"Polygon\", \"Primitive Shape\", \"Words\", \"Picture\"};\n                String s = (String)JOptionPane.showInputDialog(null,\"Layer Type: \",\"Point Generator\",JOptionPane.PLAIN_MESSAGE,null,possibilities,\"Polygon\");\n                if (s == null)\n                    return;\n                checkNumbers(s);\n                for (int i = 0; i<layers.size(); i++)\n                    layers.get(i).deselect();\n                if (s.equals(\"Picture\"))\n                {\n                    JFileChooser fileChooser = new JFileChooser();\n                    int returnValue = fileChooser.showOpenDialog(null);\n                    if (returnValue == JFileChooser.APPROVE_OPTION)\n                    {\n                        File selectedFile = fileChooser.getSelectedFile();\n                        layers.add(new Picture(selectedFile.getAbsolutePath(), picNum, -1*(int)xMove+20, -1*(int)yMove+20));\n                    }\n                }\n                else if (s.equals(\"Primitive Shape\"))\n                {\n                    Object[] types= {\"Oval\", \"Rectangle\"};\n                    String type = (String)JOptionPane.showInputDialog(null,\"Types: \",\"Point Generator\",JOptionPane.PLAIN_MESSAGE,null,types,\"Oval\");\n                    if (type == null) \n                        return;\n                    layers.add(new Primitive(type, primNum));\n                    try {\n                        Thread.sleep(20);\n                    } catch(InterruptedException ex) {}\n                    new Thread()\n                    {\n                        public void run()\n                        {\n                            boolean ready1 = false;\n                            boolean ready2 = false;\n                            while (true)\n                            {\n                                try {\n                                    Thread.sleep(15);\n                                } catch(InterruptedException ex) {}\n                                if (!ready1)\n                                {\n                                    if (mouseDown)\n                                    {\n                                        ready1 = true;\n                                    }\n                                    else\n                                        layers.get(layers.size()-1).addPoint(mousex-(int)xMove, mousey-(int)yMove, 1);  \n                                }\n                                else if (!ready2)\n                                {\n                                    if (mouseDown)\n                                        ready2 = true;\n                                    else\n                                        layers.get(layers.size()-1).addPoint(mousex-(int)xMove, mousey-(int)yMove, 2);  \n                                }\n                                else\n                                {\n                                    if (!mouseDown)\n                                        break;\n                                    else\n                                        layers.get(layers.size()-1).addPoint(mousex-(int)xMove, mousey-(int)yMove, 2);  \n                                }\n                                try{\n                                    for(int i = 0; i<layers.size(); i++)\n                                    {\n                                        layers.get(i).deselect();\n                                    }\n                                    layers.get(layers.size()-1).select();\n                                    layerSelected = layers.size()-1;\n                                }catch(IndexOutOfBoundsException e){}\n                            }\n                            interrupt();\n                            for(int i = 0; i<layers.size(); i++)\n                            {\n                                layers.get(i).deselect();\n                            }\n                            layerSelected = layers.size()-1;\n                            layers.get(layerSelected).select();\n                        }\n                    }.start();\n                }\n                else if (s.equals(\"Words\"))\n                {\n                    String text = JOptionPane.showInputDialog ( \"Text: \" );\n                    if (text != null)\n                    {\n                        layers.add(new Words(text, wordNum, -1*(int)xMove+20, -1*(int)yMove+20));\n                    }\n                }\n                else if (s.equals(\"Polygon\"))\n                {\n                    selectedButton = \"none\";\n                    layers.add(new polygon(polyNum));\n                    new Thread()\n                    {\n                        public void run()\n                        {\n                            boolean waitingForMouseRelease = false;\n                            int pointNum = 0;\n                            editingPolygon = true;\n                            while (true)\n                            {\n                                try {\n                                    Thread.sleep(10);\n                                } catch(InterruptedException ex) {}\n\n                                if (!waitingForMouseRelease)\n                                {\n                                    if (mouseDown && mousex < 819 && mousey > 90)\n                                        waitingForMouseRelease = true;\n                                    else if (mousex < 819 && mousey > 90)\n                                        layers.get(layers.size()-1).addPoint(mousex-(int)xMove, mousey-(int)yMove, pointNum);\n                                }\n                                else\n                                {\n                                    if (!mouseDown && mousex < 819 && mousey > 90)\n                                    {\n                                        waitingForMouseRelease = false;\n                                        pointNum++;\n                                    }\n                                    else if (mousex < 819 && mousey > 90)\n                                        layers.get(layers.size()-1).addPoint(mousex-(int)xMove, mousey-(int)yMove, pointNum);   \n                                }\n                                if (mouseDown && mousex > 646+127 && mousex < 646+127+120  && mousey < 90)\n                                {\n                                    editingPolygon = false;\n                                    layers.get(layers.size()-1).deleteLastPoint();\n                                    break;\n                                }\n                                try{\n                                    layers.get(layerSelected).deselect();\n                                    layerSelected = -1;\n                                }catch(IndexOutOfBoundsException e){}\n                            }\n                            interrupt();\n                            layerSelected = layers.size()-1;\n                            layers.get(layerSelected).select();\n                        }\n                    }.start();\n                }\n                mouseDown = false;\n                if (selectedButton.equals(\"none\"))\n                    selectedButton = \"move\";\n            }\n        }\n        else if (mousey <= 90) // mouse Pressed on tool bar\n        {\n            if (mousex > 265 && mousex < 385 && layers.size() > 0)\n            {\n                String selectedButtonTemp = selectedButton;\n                selectedButton = \"export\";\n                tt.closeToolTip();\n                export();\n                selectedButton = selectedButtonTemp;\n            }\n            else if (layers.size()>0 && layerSelected != -1 && !(layerSelected >= layers.size()))\n            {\n                if (mousex > 11 && mousex < 130)\n                {\n                    if (layers.get(layerSelected).getType().equals(\"Words\"))\n                    {\n                        tt.closeToolTip();\n                        JOptionPane.showMessageDialog(null, \"Click Extra Layer Options To Change Text Size! Sorry!\", \"error\", JOptionPane.ERROR_MESSAGE);\n                    }\n                    else\n                        selectedButton = \"resize\";\n                }\n                else if (mousex > 138 && mousex < 257)\n                {\n                    if (layers.get(layerSelected).getType().equals(\"Words\"))\n                    {\n                        tt.closeToolTip();\n                        JOptionPane.showMessageDialog(null, \"Click Extra Layer Options To Change Text Size! Sorry!\", \"error\", JOptionPane.ERROR_MESSAGE);\n                    }\n                    else\n                        selectedButton = \"point\";\n                }\n                else if (mousex > 392 && mousex < 512)\n                {\n                    if (layers.isEmpty() || layers.size()<=layerSelected || layerSelected == -1)\n                        return;\n                    final String selectedButtonTemp = selectedButton;\n                    selectedButton = \"angle\";\n                    repaint();\n                    String saveInfo = layers.get(layerSelected).getSaveInfo();\n                    saveInfo = saveInfo.substring(0,saveInfo.length()-1);\n                    String s = layers.get(layerSelected).getType();\n                    checkNumbers(s);\n                    layers.get(layerSelected).deselect();\n                    layerSelected = layers.size();\n                    if (s.equals(\"Picture\"))\n                    {\n                        layers.add(new Picture(saveInfo));\n                        layers.get(layerSelected).number = picNum;\n                        layers.get(layerSelected).layerName = \"Pic\"+picNum;\n                    }\n                    else if (s.equals(\"Polygon\"))\n                    {\n                        layers.add(new polygon(saveInfo));\n                        layers.get(layerSelected).number = polyNum;\n                        layers.get(layerSelected).layerName = \"Poly\"+polyNum;\n                    }\n                    else if (s.equals(\"Primitive\"))\n                    {\n                        layers.add(new Primitive(saveInfo));\n                        layers.get(layerSelected).number = primNum;\n                        layers.get(layerSelected).layerName = \"Prim\"+primNum;\n                    }\n                    else if (s.equals(\"Words\"))\n                    {\n                        layers.add(new Words(saveInfo));\n                        layers.get(layerSelected).number = wordNum;\n                        layers.get(layerSelected).layerName = \"Word\"+wordNum;\n                    }\n                    layers.get(layerSelected).select();\n                    new Thread()\n                    {\n                        public void run()\n                        {\n                            while(mouseDown && mousex > 392 && mousex < 512 && mousey < 90)\n                            {\n                                try {\n                                    Thread.sleep(20);\n                                } catch (InterruptedException e) {}\n                            }\n                            selectedButton = selectedButtonTemp;\n                            interrupt();\n                        }\n                    }.start();\n                }\n                else if (mousex > 519 && mousex < 639)\n                {\n                    selectedButton = \"move\";\n                }\n                else if (mousex > 646 && mousex < 766)\n                {\n                    String selectedButtonTemp = selectedButton;\n                    selectedButton = \"options\";\n                    tt.closeToolTip();\n                    layers.get(layerSelected).openDialog();\n                    selectedButton = selectedButtonTemp;\n                }\n                else if (!(mousex > 929 && mousex < 981 && mousey > 23 && mousey < 71))\n                    selectedButton = \"move\";\n            }\n            if (mousex > 929 && mousex < 981 && mousey > 23 && mousey < 71)\n            {\n                //setting up variables and the jpanel\n                tt.closeToolTip();\n                boolean autoSaveTemp = autoSave;\n                boolean showToolTipTemp = showToolTip;\n                boolean openFromSaveTemp = openFromSave;\n                boolean alignXYTemp = alignXY;\n                int pointSizeTemp = pointSize;\n                int estimatedFPSWaitTimeTemp = estimatedFPSWaitTime;\n//              int canvasWidthTemp = canvasWidth;\n//              int canvasHeightTemp = canvasHeight;\n                Color selectionColorTemp = selectionColor;\n                JPanel myPanel = new JPanel();\n                myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.PAGE_AXIS));\n                JTextField pointSizeField = new JTextField(pointSize/2+\"\", 6);\n                JTextField estimatedFPSWaitTimeField = new JTextField((int)Math.round((double)1000/(double)estimatedFPSWaitTime)+\"\", 6);\n                JTextField canvasWidthField = new JTextField(canvasWidth+\"\", 6);\n                JTextField canvasHeightField = new JTextField(canvasHeight+\"\", 6);\n                JLabel canvasHeightText = new JLabel(\"Canvas Height\");\n                JLabel canvasWidthText = new JLabel(\"Canvas Width\");\n                JLabel pointSizeText = new JLabel(\"Layer Point Size (for shape and scale)\");\n                JLabel estimatedFPSWaitTimeText = new JLabel(\"Estimated FPS:\");\n                JButton colorChooser = new JButton(\"Change Selection Color\");\n                colorChooser.setActionCommand(\"CHOOSECOLOR\");\n                colorChooser.addActionListener(this);\n                JButton help = new JButton(\"What is this funky UI??? Help!!!\");\n                help.setActionCommand(\"help\");\n                help.addActionListener(this);\n                //creating and setting up components to draw in the jpanel\n                estimatedFPSWaitTimeField.setAlignmentX(Component.CENTER_ALIGNMENT);\n                pointSizeField.setAlignmentX(Component.CENTER_ALIGNMENT);\n                pointSizeText.setAlignmentX(Component.CENTER_ALIGNMENT);\n                estimatedFPSWaitTimeText.setAlignmentX(Component.CENTER_ALIGNMENT);\n                canvasWidthText.setAlignmentX(Component.CENTER_ALIGNMENT);\n                canvasWidthField.setAlignmentX(Component.CENTER_ALIGNMENT);\n                canvasHeightText.setAlignmentX(Component.CENTER_ALIGNMENT);\n                canvasHeightField.setAlignmentX(Component.CENTER_ALIGNMENT);\n                autoSaveCheckBox.setAlignmentX(Component.CENTER_ALIGNMENT);\n                showToolTipCheckBox.setAlignmentX(Component.CENTER_ALIGNMENT);\n                openFromSaveCheckBox.setAlignmentX(Component.CENTER_ALIGNMENT);\n                alignXYCheckBox.setAlignmentX(Component.CENTER_ALIGNMENT);\n                colorChooser.setAlignmentX(Component.CENTER_ALIGNMENT);\n                help.setAlignmentX(Component.CENTER_ALIGNMENT);\n                for (int i = 0; i<4; i++)\n                {\n                    autoSaveCheckBox.setSelected(autoSave);\n                    showToolTipCheckBox.setSelected(showToolTip);\n                    openFromSaveCheckBox.setSelected(openFromSave);\n                    alignXYCheckBox.setSelected(alignXY);\n                    autoSave = autoSaveTemp;\n                    showToolTip = showToolTipTemp;\n                    openFromSave = openFromSaveTemp;\n                    alignXY = alignXYTemp;\n                }\n                //drawing components in jpanel\n                myPanel.add(pointSizeText);\n                myPanel.add(pointSizeField);\n                myPanel.add(estimatedFPSWaitTimeText);\n                myPanel.add(estimatedFPSWaitTimeField);\n                myPanel.add(canvasWidthText);\n                myPanel.add(canvasWidthField);\n                myPanel.add(canvasHeightText);\n                myPanel.add(canvasHeightField);\n                myPanel.add(autoSaveCheckBox);\n                myPanel.add(openFromSaveCheckBox);\n                myPanel.add(alignXYCheckBox);\n                myPanel.add(showToolTipCheckBox);\n                myPanel.add(colorChooser);\n                myPanel.add(help);\n\n                //launching jpanel\n                int result = JOptionPane.showConfirmDialog(null, myPanel, \"Program Settings\", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);\n                if (result == JOptionPane.OK_OPTION)\n                {\n                    try{\n                        pointSize = Integer.parseInt(pointSizeField.getText())*2;\n                    }catch(NumberFormatException f){}\n                    if (pointSize < 4)\n                        pointSize = 4;\n                    try{\n                        estimatedFPSWaitTime = (int)Math.round((double)1000/(double)Integer.parseInt(estimatedFPSWaitTimeField.getText()));\n                    }catch(NumberFormatException f){}\n                    try{\n                        canvasWidth = Integer.parseInt(canvasWidthField.getText());\n                    }catch(NumberFormatException f){}\n                    try{\n                        canvasHeight = Integer.parseInt(canvasHeightField.getText());\n                    if(canvasHeight < 510)\n                    {\n                        canvasHeight = 510;\n                        yMove = 0;\n                    }\n                    else if(canvasHeight < 510-(int)yMove)\n                        yMove = (canvasHeight-510) * -1;\n                    if(canvasWidth < 819)\n                    {\n                        canvasWidth = 819;\n                        xMove = 0;\n                    }\n                    else if(canvasWidth < 819-(int)xMove)\n                        xMove = (canvasWidth-819) * -1;\n                    }catch(NumberFormatException f){}\n                    for (int i = 0; i<layers.size(); i++)\n                    {\n                        layers.get(i).changePointSize(pointSize);\n                        layers.get(i).changeColor(selectionColor);\n                    }\n                    buffered = (VolatileImage)(createVolatileImage( canvasWidth, canvasHeight+90 ) );\n                }\n                else\n                {\n                    autoSave = autoSaveTemp ;\n                    showToolTip = showToolTipTemp;\n                    openFromSave = openFromSaveTemp;\n                    selectionColor = selectionColorTemp;\n                    pointSize = pointSizeTemp;\n                    estimatedFPSWaitTime = estimatedFPSWaitTimeTemp;\n                    alignXY = alignXYTemp;\n                }\n                saveSettings();\n            }\n        }\nelse if (!editingPolygon && ((canvasWidth > 819 && mousex < 804) || canvasWidth <= 819 ) && ((canvasHeight > 510 && mousey < 585) || canvasHeight <= 510 )) //mousepressed on canvas\n        {\n            for (int i = layers.size()-1; i>-1; i--)\n            {\n                int layerReturn = layers.get(i).contains(mousex-(int)xMove, mousey-(int)yMove,selectedButton);\n                if (layerReturn != -1)\n                {\n                    if (layerSelected != -1  && !(layerSelected >= layers.size()))\n                        layers.get(layerSelected).deselect();\n                    layerSelected = i;\n                    layers.get(layerSelected).select();\n                    if (selectedButton.equals(\"move\")&&layerReturn ==0)\n                    {\n                        final int layerNum = i;\n                        final int imageX = layers.get(i).getX()-mousex+(int)xMove;\n                        final int imageY = layers.get(i).getY()-mousey+90+(int)yMove;\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                while (mouseDown)\n                                {\n                                    layers.get(layerNum).updatePosition(mousex+imageX-(int)xMove, mousey+imageY-(int)yMove);\n                                    try {\n                                        Thread.sleep(10);\n                                    } catch (InterruptedException e) {}\n                                }\n                                interrupt();\n                            }\n                        }.start();\n                        break;\n                    }\n                    else if (selectedButton.equals(\"resize\") && layerReturn == 1)\n                    {\n                        final int layerNum = i;\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                while (mouseDown)\n                                {\n                                    layers.get(layerNum).updatePoint(mousex-(int)xMove, mousey-(int)yMove, selectedButton);\n                                    try {\n                                        Thread.sleep(10);\n                                    } catch (InterruptedException e) {}\n                                }\n                                interrupt();\n                            }\n                        }.start();\n                        break;\n                    }\n                    else if (selectedButton.equals(\"point\")&&layerReturn == 1)\n                    {\n                        final int layerNum = i;\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                while (mouseDown)\n                                {\n                                    layers.get(layerNum).updatePoint(mousex-(int)xMove, mousey-(int)yMove, selectedButton);\n                                    try {\n                                        Thread.sleep(10);\n                                    } catch (InterruptedException e) {}\n                                }\n                                interrupt();\n                            }\n                        }.start();\n                        break;\n                    }\n                    else if (selectedButton.equals(\"options\"))\n                    {\n                        selectedButton = \"options\";\n                        if (layerReturn != -1 && !(layerSelected >= layers.size()))\n                        {\n                            layers.get(layerSelected).openDialog();\n                            selectedButton = \"none\";\n                        }\n                    }\n                    else if (layerReturn == 0)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    public void mouseReleased(MouseEvent e)\n    {\n        mouseDown = false;\n        save();\n    }\n    public void mouseDragged(MouseEvent e)\n    {\n        mousex = e.getX();\n        mousey = e.getY();\n    }\n    public void mouseMoved( MouseEvent e )\n    {\n        mousex = e.getX();\n        mousey = e.getY();\n        if (mousey<79 && mousey > 12)\n        {\n            if (layers.size()==0 && mousex > 11 && mousex < 766)\n            {\n                tt.changeWords(\"Please add a layer first!\", 1);\n                tt.showToolTip(showToolTip);\n            }\n            else if (editingPolygon)\n            {\n                if (mousex > 646+127 && mousex < 646+127+120)\n                {\n                    mouseOver = 8;\n                    tt.changeWords(\"Done drawing polygon\", 0);\n                    tt.showToolTip(showToolTip);\n                }\n                else\n                {\n                    tt.changeWords(\"Please finish drawing polygon! (press check)\", 1);\n                    tt.showToolTip(showToolTip);\n                }\n            }\n            else if (layerSelected == -1 && mousex > 11 && mousex < 766)\n            {\n                if (!(mousex > 265 && mousex < 385))\n                {\n                    tt.changeWords(\"Please select a layer first!\", 1);\n                    tt.showToolTip(showToolTip);\n                }\n                else\n                {\n                    mouseOver = 3;\n                    tt.changeWords(\"Export Project\", 0);\n                    tt.showToolTip(showToolTip);\n                }\n            }\n            else if (mousex > 11 && mousex < 130)\n            {\n                mouseOver = 1;\n                if (layerSelected >-1 && !(layerSelected >= layers.size()) && layers.get(layerSelected).getType().equals(\"Words\"))\n                    tt.changeWords(\"Click extra options to change size for words!\", 1);\n                else\n                    tt.changeWords(\"Scale Layer\", 0);\n                tt.showToolTip(showToolTip);\n            }\n            else if (mousex > 138 && mousex < 257)\n            {\n                mouseOver = 2;\n                if (layerSelected != -1 && !(layerSelected >= layers.size()) && layers.get(layerSelected).getType().equals(\"Words\"))\n                    tt.changeWords(\"Click extra options to change size for words!\", 1);\n                else\n                    tt.changeWords(\"Change Layer Shape\", 0);\n                tt.showToolTip(showToolTip);\n            }\n            else if (mousex > 265 && mousex < 385)\n            {\n                mouseOver = 3;\n                tt.changeWords(\"Export Project\", 0);\n                tt.showToolTip(showToolTip);\n            }\n            else if (mousex > 392 && mousex < 512)\n            {\n                mouseOver = 4;\n                tt.changeWords(\"Copy Layer\", 0);\n                tt.showToolTip(showToolTip);\n            }\n            else if (mousex > 519 && mousex < 639)\n            {\n                mouseOver = 5;\n                tt.changeWords(\"Move Layer\", 0);\n                tt.showToolTip(showToolTip);\n            }\n            else if (mousex > 646 && mousex < 766)\n            {\n                mouseOver = 6;\n                tt.changeWords(\"Extra Layer Options\", 0);\n                tt.showToolTip(showToolTip);\n            }\n            else if (mousex > 929 && mousex < 981 && mousey > 23 && mousey < 71)\n            {\n                tt.changeWords(\"Settings\", 0);\n                tt.showToolTip(showToolTip);\n                if (mouseOver != 7)\n                {\n                    new Thread()\n                    {\n                        public void run()\n                        {\n                            mouseOver = 7;\n                            while(mousex > 929 && mousex < 981 && mousey > 23 && mousey < 71)\n                            {\n                                try {\n                                    Thread.sleep(15);\n                                } catch(InterruptedException ex) {\n                                    Thread.currentThread().interrupt();\n                                }\n                                if (gearVelocity < 15)\n                                    gearVelocity+= .5;\n                                gearDegrees += gearVelocity;\n                            }\n                            while (gearDegrees > 360)\n                                gearDegrees = gearDegrees-360;\n                            while (gearVelocity > 0)\n                            {\n                                try {\n                                    Thread.sleep(15);\n                                } catch(InterruptedException ex) {\n                                    Thread.currentThread().interrupt();\n                                }\n                                if (mousex > 929 && mousex < 981 && mousey > 23 && mousey < 71)\n                                {\n                                    interrupt();\n                                }\n                                else if (gearVelocity == 14)\n                                {\n                                    gearDegrees = 9;\n                                    gearVelocity -= .5;\n                                }\n                                else\n                                {\n                                    gearVelocity -= .5;\n                                    gearDegrees += gearVelocity;\n                                }\n                            }\n                            while (gearDegrees % 45!= 0)\n                            {\n                                    gearVelocity = 0;\n                                    gearDegrees ++;\n                                try {\n                                    Thread.sleep(15);\n                                } catch(InterruptedException ex) {\n                                    Thread.currentThread().interrupt();\n                                }\n                            }\n//                          selectedButton = \"move\";\n                            interrupt();\n                        }\n                    }.start();\n                }\n            }\n            else\n            {\n                mouseOver = -1;\n                tt.closeToolTip();\n            }\n        }\n        else if (mousex > 823 && mousex < 997 && mousey > 551 && mousey < 598)\n        {\n            mouseOver = 0;\n            tt.changeWords(\"Add a layer\", 0);\n            tt.showToolTip(showToolTip);\n        }\n        else\n        {\n            mouseOver = -1;\n            tt.closeToolTip();\n        }\n    }\n    public void actionPerformed(ActionEvent e)\n    {\n        if (\"CHOOSECOLOR\".equals(e.getActionCommand())) \n        {\n            cc = new ColorChooser(selectionColor);\n            selectionColor = cc.getColor();\n            cc = null;\n        }\n        else if (\"help\".equals(e.getActionCommand())) \n        {\n            try {\n                java.awt.Desktop.getDesktop().browse(java.net.URI.create(\"https://helpx.adobe.com/photoshop/using/layer-basics.html\"));\n            }catch (java.io.IOException f) {}\n        }\n    }\n    public void itemStateChanged(ItemEvent e)\n    {\n        autoSave = autoSaveCheckBox.isSelected();\n        showToolTip = showToolTipCheckBox.isSelected();\n        openFromSave = openFromSaveCheckBox.isSelected();\n        alignXY = alignXYCheckBox.isSelected();\n    }\n    public void mouseWheelMoved(MouseWheelEvent e) \n    {\n        if (!(barH == 160 && e.getWheelRotation() < 0))\n            mouseWheelYChange+= e.getWheelRotation();\n    }\n    public void keyPressed(KeyEvent e) \n    {\n        if ((e.getKeyCode() == KeyEvent.VK_DELETE || e.getKeyCode() == KeyEvent.VK_BACK_SPACE)&& layers.size()>layerSelected&&layerSelected!=-1)\n        {\n            layers.remove(layerSelected);\n            if (layers.size()>0)\n                selectedButton = \"move\";\n            else\n                selectedButton = \"none\";\n            save();\n        }\n        if (e.getKeyCode() == KeyEvent.VK_DOWN)\n        {\n            if(yMove+canvasHeight-510 > 3)\n                yMove-=3;\n        }\n        if (e.getKeyCode() == KeyEvent.VK_UP)\n        {\n            if(yMove<0)\n                yMove+=3;\n        }\n        if (e.getKeyCode() == KeyEvent.VK_LEFT)\n        {\n            if(xMove<0)\n                xMove+=3;\n        }\n        if (e.getKeyCode() == KeyEvent.VK_RIGHT)\n        {\n            if(xMove+canvasWidth-819 > 3)\n                xMove-=3;\n        }\n        if (e.getKeyCode() == KeyEvent.VK_ESCAPE)\n        {\n            if (layerSelected != -1 && !(layerSelected >= layers.size()))\n                layers.get(layerSelected).deselect();\n            layerSelected = -1;\n            selectedButton = \"move\";\n        }\n    }\n    public void keyReleased(KeyEvent e)\n    {\n        save();\n    }\n    public void keyTyped(KeyEvent e) {}\n    public void mouseEntered(MouseEvent e) {}\n    public void mouseExited(MouseEvent e) {}\n    public void mouseClicked(MouseEvent e){}\n    public Dimension getPreferredSize() \n    {\n        return new Dimension(1000,600);\n    }\n\n    /**************************\n     * Code section for saving *\n     **************************/\n    private void export() //method for exporting project to text file and copying to clipboard\n    {\n        for(int i = 0; i<layers.size(); i++)\n            layers.get(i).deselect();\n        layerSelected = -1;\n        repaint();\n        String fileName = (String)JOptionPane.showInputDialog(null,\"Project Folder name: \",\"Point Generator\",JOptionPane.PLAIN_MESSAGE);\n        if (fileName == null)\n            return;\n        int deltaX = 1000;\n        int deltaY = 600;\n        if(alignXY)\n        {\n            for (int i = 0; i<layers.size(); i++)\n            {\n                if (layers.get(i).getLeft()<deltaX)\n                    deltaX = layers.get(i).getLeft();\n                if (layers.get(i).getTop()<deltaY)\n                    deltaY = layers.get(i).getTop();\n            }\n        }\n        else\n        {\n            deltaX = 0;\n            deltaY = 0;\n        }\n        String export = \"\";\n        for(int i = 0; i<layers.size();i++)\n        {\n            export+=layers.get(i).getExportString(deltaX, deltaY);\n        }\n        //creating folder for project\n        File folder = new File(fileName+\" Project\");\n        if (folder.exists() && folder.isDirectory())\n        {\n            Object[] options = {\"Confirm\", \"Cancel\"};\nint warning = JOptionPane.showOptionDialog(null, \"Overwrite existing folder?\", \"Point Generator\",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[0]);\n            if (warning == 0)\n            {\n                File[] files = folder.listFiles();\n                if(files!=null) \n                {\n                    for(File each: files) \n                    {\n                        each.delete();\n                    }\n                }\n            }\n            else\n                return;\n        }\n        else\n            new File(fileName+\" Project\").mkdir();\n        Object[] possibilities = {\"Code\", \"PNG\"};\n        String s = (String)JOptionPane.showInputDialog(null,\"Export as: \",\"Point Generator\",JOptionPane.PLAIN_MESSAGE,null,possibilities,\"Code\");\n        if (s == null)\n            return;\n        if (s.equals(\"PNG\"))\n        {\n            try {\n                File image = null;\n                image = new File(fileName+\" Project/\"+fileName+\".png\");\n                if(image.exists())\n                    image.delete();\n                image.createNewFile();\n                ImageIO.write(buffered.getSnapshot().getSubimage(0,89, buffered.getWidth(), buffered.getHeight()-89), \"png\", image);\n            } catch (Exception e){}\nJOptionPane.showMessageDialog(null, \"Image has been saved inside the folder \"\"+fileName+\" Project\" next to the PointGenerator.jar Icon\", \"Point Generator\", JOptionPane.PLAIN_MESSAGE);\n        }\n        if(s.equals(\"Code\"))\n        {\n            //creating new file within project folder\n            try{\n                File file =new File(fileName+\" Project/code.txt\");\n                file.createNewFile();\n                FileWriter fileWritter = new FileWriter(fileName+\" Project/\"+file.getName(),true);\n                BufferedWriter bufferWritter = new BufferedWriter(fileWritter);\n                bufferWritter.write(export);\n                bufferWritter.close();\n            }catch(Exception e){}\n            //copying pictures to target folder\n            for (int i = 0; i<layers.size(); i++)\n                layers.get(i).copyImages(fileName+\" Project\");\n            // copying to clipboard\n            StringSelection selection = new StringSelection(export);\n            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n            clipboard.setContents(selection, selection);\n            int confirmCancel = 0;\n            checkNumbers(\"Picture\");\n            if (picNum != 0)\n            {\n                Object[] options = {\"Confirm\", \"Cancel\"};\n                while (confirmCancel == 0)\nconfirmCancel = JOptionPane.showOptionDialog(null, \"Code has been copied to clipboard. Press ctrl+v to paste, or cmd + v if you're a mac scrub. \nIt's also in a text file within the folder \"\"+fileName+\" Project \" next to PointGenerator's Icon.\nCopy all those images into the same file location as your class files! Your project won't work if you don't!\nPress cancel to confirm (just to make sure you read this)\", \"Point Generator\",JOptionPane.YES_NO_OPTION,JOptionPane.PLAIN_MESSAGE,null,options,options[0]);\n            }\n            else\n            {\n                Object[] options = {\"Confirm\", \"Cancel\"};\nconfirmCancel = JOptionPane.showOptionDialog(null, \"Code has been copied to clipboard. Press ctrl+v to paste, or cmd + v if you're a mac scrub. \nIt's also in a text file within the folder \"\"+fileName+\" Project \" next to PointGenerator's Icon.\", \"Point Generator\",JOptionPane.YES_NO_OPTION,JOptionPane.PLAIN_MESSAGE,null,options,options[0]);\n            }\n        }\n    }\n    private void save()\n    {\n        //code for saving workspace\n        if (autoSave)\n        {\n            new Thread()\n            {\n                public void run()\n                {\n                    checktempFolder();\nString export = \"scrn\"+\"/\"+canvasWidth+\"/\"+canvasHeight+\"/\"+xMove+\"/\"+yMove+\"/\"+chosen+\"/\"+barH+\"/\"+yScroll+\"/\"+ratio+\"/\"+selectedButton+\"/\"+layerSelected+\"/\"+picNum+\"/\"+polyNum+\"/\"+primNum+\"/\"+wordNum+\"\n\";\n                    for(int i = 0; i<layers.size();i++)\n                        export+=layers.get(i).getSaveInfo();\n                    try\n                    {\n                        File file = new File(\".temp/praise.tenshi\");\n                        if (file.exists())\n                            file.delete();\n                        file.createNewFile();\n                        FileWriter fileWritter = new FileWriter(file,true);\n                        BufferedWriter bufferWritter = new BufferedWriter(fileWritter);\n                        bufferWritter.write(export);\n                        bufferWritter.close();\n                        for (int i = 0; i<layers.size(); i++)\n                            layers.get(i).copyImages(\".temp\");\n                    }catch(Exception e){}\n                    interrupt();\n                }\n            }.start();\n        }\n    }\n    private void saveSettings()\n    {\n        //code for saving settings\n        new Thread()\n        {\n            public void run()\n            {\n                checktempFolder();\nString export = autoSave+\"/\"+showToolTip+\"/\"+alignXY+\"/\"+pointSize+\"/\"+estimatedFPSWaitTime+\"/\"+openFromSave+\"/\"+selectionColor.getRed()+\"/\"+selectionColor.getGreen()+\"/\"+selectionColor.getBlue()+\"/\"+selectionColor.getAlpha()+\"\n\";\n                try{\n                    File file = new File(\".temp/praise.tenshi.settings\");\n                    if (file.exists())\n                        file.delete();\n                    file.createNewFile(); \n                    FileWriter fileWritter = new FileWriter(file,true);\n                    BufferedWriter bufferWritter = new BufferedWriter(fileWritter);\n                    bufferWritter.write(export);\n                    bufferWritter.close();\n                }catch(Exception e){\n//                  JOptionPane.showMessageDialog(null, e.getStackTrace(), \"error\", JOptionPane.ERROR_MESSAGE);\n                }\n            }\n        }.start();\n    }\n    private boolean openSave()\n    {\n        File file = null;\n        try {\n            file = new File(\".temp/praise.tenshi\");\n            if (!file.exists())\n                return false;\n        } catch (Exception e){\n            e.printStackTrace();\n            return false;\n        }\n        BufferedReader br = null;\n        try \n        {\n            String sCurrentLine;\n            br = new BufferedReader(new FileReader(file));\n            while ((sCurrentLine = br.readLine()) != null)\n            {\n                if (sCurrentLine.substring(0,4).equals(\"scrn\"))\n                {\n                    int index1 = sCurrentLine.indexOf(\"/\", -1);\n                    int index2 = sCurrentLine.indexOf(\"/\", index1+1);\n                    canvasWidth = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    canvasHeight = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    xMove = Double.parseDouble(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    yMove = Double.parseDouble(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    chosen = sCurrentLine.substring(index1+1, index2);\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    barH = Double.parseDouble(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    yScroll = Double.parseDouble(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    ratio = Double.parseDouble(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    selectedButton = sCurrentLine.substring(index1+1, index2);\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    layerSelected = Integer.parseInt(sCurrentLine.substring(index1+1, index2)); \n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    picNum = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    polyNum = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    primNum = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n                    index1 = sCurrentLine.indexOf(\"/\",index2);\n                    index2 = sCurrentLine.indexOf(\"/\",index1+1);\n                    wordNum = Integer.parseInt(sCurrentLine.substring(index1+1, sCurrentLine.length()));\n                    buffered = (VolatileImage)(createImage( canvasWidth, canvasHeight+90) );\n                }\n                else if (sCurrentLine.substring(0,4).equals(\"pict\"))\n                {\n                    layers.add(new Picture(sCurrentLine));\n                }\n                else if (sCurrentLine.substring(0,4).equals(\"word\"))\n                {\n                    layers.add(new Words(sCurrentLine));\n                }\n                else if (sCurrentLine.substring(0,4).equals(\"prim\"))\n                {\n                    layers.add(new Primitive(sCurrentLine));\n                }\n                else if (sCurrentLine.substring(0,4).equals(\"poly\"))\n                {\n                    layers.add(new polygon(sCurrentLine));\n                }\n                else\n                {\n                    return false;\n                }\n            }\n        }\n        catch (Exception e) \n        {\n            chosen = \"none\";\n            barH = 111;\n            yScroll = 0;\n            ratio = 1;\n            selectedButton = \"move\";\n            layerSelected = -1;\n            picNum =  0;\n            polyNum = 0;\n            primNum = 0;\n            wordNum = 0;\n            layers.clear();\n            canvasWidth = 819;\n            canvasHeight = 510;\n            yMove = 0;\n            xMove = 0;\n            return false;\n        } \n        finally \n        {\n            try \n            {\n                if (br != null)\n                    br.close();\n            } \n            catch (IOException ex){}\n        }\n        return true;\n    }\n    private boolean openSaveSettings()\n    {\n        File file = null;\n        try {\n            file = new File(\".temp/praise.tenshi.settings\");\n        } catch (Exception e)\n        {\n            return false;\n        }\n        if (!file.exists())\n            return false;\n        BufferedReader br = null;\n        try\n        {\n            br = new BufferedReader(new FileReader(file));\n            String sCurrentLine = br.readLine();\n            int index1 = 0;\n            int index2 = sCurrentLine.indexOf(\"/\", index1+1);\n            autoSave = Boolean.parseBoolean(sCurrentLine.substring(index1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            showToolTip = Boolean.parseBoolean(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            alignXY = Boolean.parseBoolean(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            pointSize = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            estimatedFPSWaitTime = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            openFromSave = Boolean.parseBoolean(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            int R = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            int G = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            int B = Integer.parseInt(sCurrentLine.substring(index1+1, index2));\n            index1 = sCurrentLine.indexOf(\"/\",index2);\n            index2 = sCurrentLine.indexOf(\"/\",index1+1);\n            int A = Integer.parseInt(sCurrentLine.substring(index1+1, sCurrentLine.length()));\n            selectionColor = new Color(R,G,B,A);\n            return true;\n        }\n        catch (Exception e)\n        {\n            JOptionPane.showMessageDialog(null, \"It seems like your settings file was corrupted or missing! Sorry!\", \"error\", JOptionPane.ERROR_MESSAGE);\n            autoSave = true;\n            alignXY = true;\n            showToolTip = true;\n            pointSize = 8;\n            estimatedFPSWaitTime = 17;\n            openFromSave = true;\n            selectionColor = Color.cyan;\n            return false;\n        } \n        finally \n        {\n            try \n            {\n                if (br != null)\n                    br.close();\n            }\n            catch (IOException ex) {}\n        }\n    }\n    \n    /*******************************************\n    Methods used by this class\n     ********************************************/\n    private void checktempFolder()\n    {\n        File folder = new File(\".temp\");\n        if (!folder.exists())\n        {\n            new File(\".temp\").mkdir();\n        }\n    }\n    private BufferedImage rotateImage(BufferedImage ImageIn, int degreesIn, ImageObserver o)\n    {\n        ImageIcon icon = new ImageIcon(ImageIn);\n        BufferedImage blankCanvas= new BufferedImage(icon.getIconWidth(), icon.getIconHeight(),BufferedImage.TYPE_INT_ARGB);\n        Graphics2D g2 = (Graphics2D)blankCanvas.getGraphics();\n        g2.rotate(Math.toRadians(degreesIn), icon.getIconWidth()/2, icon.getIconHeight()/2);\n        g2.drawImage(ImageIn, 0, 0, o);\n        return blankCanvas;\n    }\n    private void checkNumbers(String type)\n    {\n        int big = -1;\n        for (int i = 0; i<layers.size(); i++)\n        {\n            if (layers.get(i).getType().equals(type)&&layers.get(i).getNum()>big)\n            {\n                big = layers.get(i).getNum();\n            }\n        }\n        if (type.equals(\"Picture\"))\n            picNum = big+1;\n        else if (type.equals(\"Words\"))\n            wordNum = big+1;\n        else if (type.equals(\"Primitive\"))\n            primNum = big+1;\n        else if (type.equals(\"Polygon\"))\n            polyNum = big+1;\n    }\n    private int layerListHeight()\n    {\n        int height = layers.size()*(82);\n        return height;\n    }\n\n    /***********************************************************************\n    Random bits of code mostly for setting and getting stuff between classes\n     ***********************************************************************/\n    public static int getMouseOver()\n    {\n        return mouseOver;\n    }\n    public static int getMouseY()\n    {\n        return mousey-(int)yMove;\n    }\n    public static int getMouseX()\n    {\n        return mousex-(int)xMove;\n    }\n    public static boolean getMouseDown()\n    {\n        return mouseDown;\n    }\n    public static void setEditingPolygon(boolean editingPolygonIn)\n    {\n        editingPolygon = editingPolygonIn;\n    }\n    public static void setLayerSelected(int layerSelectedIn)\n    {\n        layerSelected = layerSelectedIn;\n    }\n}\n";
var content;
var count = 0;
var messages;
window.addEventListener("DOMContentLoaded", onLoad);

function onLoad() {
	content = document.getElementById("content");
	messages = document.getElementsByClassName("popUps")
	setCursorToEnd(document.body);
}

function setCursorToEnd(ele) {
	var range = document.createRange();
	var sel = window.getSelection();
	range.setStart(ele, 1);
	range.collapse(true);
	sel.removeAllRanges();
	sel.addRange(range);
	ele.focus();
}

window.onkeydown = function(e) {
	for(i = 0; i < 2; i++) {
		content.innerHTML = content.innerHTML.slice(0,-1);
		content.innerHTML += code.substring(count,count + 1) == "\n" ? "<br>" : code.substring(count, count + 4) == "    " ? "&nbsp;&nbsp;&nbsp;&nbsp;" : code.substring(count,count + 1);
		if(code.substring(count, count + 4) == "    ")
			count += 3;
		content.innerHTML += "|";
		count++;
	}
	if(count > 1000)
		choosePopUp();
	if(count > code.length)
		code += code;
}

function choosePopUp() {
	if(Math.random() < 0.01) {
		var choice = Math.floor(Math.random() * messages.length);
		for(j = 0; j < messages.length; j++)
			messages[j].style.display = "none";
		displayPopUp(messages[choice]);
	}
}

function displayPopUp(el) {
	el.style.display = "block";
	setTimeout(function(){el.style.display = "none"},1000);
}